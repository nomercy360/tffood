apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    service: tffood-api
  name: tffood-api
  namespace: default
spec:
  serviceName: "tffood-api"
  replicas: 1
  selector:
    matchLabels:
      service: tffood-api
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  template:
    metadata:
      labels:
        service: tffood-api
    spec:
      containers:
        - image: maksim1111/tffood-api:latest
          name: tffood-api
          imagePullPolicy: Always
          command: [ "/app/main" ]
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "512Mi"
          volumeMounts:
            - mountPath: /app/storage
              subPath: storage
              name: tffood-api-data
          env:
            - name: DB_PATH
              value: /app/storage/db.sqlite
          envFrom:
            - secretRef:
                name: tffood-api-secrets
          readinessProbe:
            exec:
              command: ["sqlite3", "/app/storage/db.sqlite", "SELECT 1"]
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
  volumeClaimTemplates:
    - metadata:
        name: tffood-api-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
        storageClassName: "do-block-storage"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: tffood-api
  name: tffood-api
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    service: tffood-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tffood-api
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - host: tffood-api.mxksim.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: tffood-api
                port:
                  number: 8080